{"version":3,"sources":["Components/chartsByState.js","Components/chartsByCourses.js","App.js","reportWebVitals.js","index.js"],"names":["ChartsByState","props","componentDidMount","a","axios","get","then","res","setState","labels","data","series","catch","err","console","log","getCollegesByState","colleges_byState","collegesDetails","similarColleges","students","studentDetails","collegeDetails","id","state","courses","number_of_students","collegeId","getStudentDetails","this","classes","options","title","text","align","style","fontSize","fontWeight","color","responsive","breakpoint","chart","width","legend","position","events","dataPointSelection","event","chartContext","config","w","dataPointIndex","className","list","Grid","container","spacing","item","xs","sm","md","type","backgroundColor","borderRadius","padding","textAlign","textDecoration","map","college","index","List","ListItem","button","onClick","Id","State","Courses","Number_of_students","ListItemAvatar","Avatar","ListItemText","primary","Name","Year_founded","City","Country","join","length","student","Year_of_batch","College_id","Skills","Component","withStyles","theme","paddingTop","paddingBotton","App","drawerWidth","handleClick1","flag","handleClick2","handleDrawerToggle","open","window","drawer","toolbar","ListItemIcon","undefined","document","body","root","CssBaseline","AppBar","appBar","Toolbar","IconButton","aria-label","edge","menuButton","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","onClose","paper","drawerPaper","ModalProps","keepMounted","xsDown","content","display","breakpoints","up","flexShrink","marginLeft","marginRight","mixins","flexGrow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.731794e3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport EmojiPeopleIcon from \"@material-ui/icons/EmojiPeople\";\n\nconst styles = (theme) => ({\n  list: {\n    \"& .MuiList-padding\": {\n      paddingTop: \"0px\",\n      paddingBotton: \"0px\",\n    },\n  },\n});\n\nclass ChartsByState extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount = async () => {\n    await axios\n      .get(\"http://localhost:3001/countCollege_byState\")\n      .then((res) => {\n        this.setState({\n          labels: res.data[\"colleges\"],\n          series: res.data[\"count\"],\n        });\n      })\n      .catch((err) => {\n        console.log(err, \"Error in loading data\");\n      });\n  };\n\n  getCollegesByState = (data) => {\n    axios\n      .get(`http://localhost:3001/college_byState?state=${data}`)\n      .then((res) => {\n        this.setState({\n          colleges_byState: res.data,\n          collegesDetails: null,\n          similarColleges: null,\n          students: null,\n          studentDetails: null,\n        });\n      })\n      .catch((err) => {\n        console.log(err, \"Error in loading data\");\n      });\n  };\n\n  collegeDetails = (id, state, courses, number_of_students) => {\n    this.setState({ collegeId: id });\n    axios\n      .get(`http://localhost:3001/college_details?id=${id}`)\n      .then((res) => {\n        this.setState({\n          collegesDetails: res.data,\n          studentDetails: null,\n        });\n      })\n      .catch((err) => {\n        console.log(err, \"Error in loading data\");\n      });\n    axios\n      .get(\n        `http://localhost:3001/similarColleges?state=${state}&courses=${courses}&number_of_students=${number_of_students}`\n      )\n      .then((res) => {\n        this.setState({\n          similarColleges: res.data,\n        });\n      })\n      .catch((err) => {\n        console.log(err, \"Error in loading data\");\n      });\n    axios\n      .get(`http://localhost:3001/student_byCollegeID?college_id=${id}`)\n      .then((res) => {\n        this.setState({\n          students: res.data,\n        });\n      })\n      .catch((err) => {\n        console.log(err, \"Error in loading data\");\n      });\n  };\n  getStudentDetails = (id) => {\n    console.log(id);\n    axios\n      .get(`http://localhost:3001/student_details?id=${id}`)\n      .then((res) => {\n        console.log(res.data);\n        this.setState({\n          studentDetails: res.data,\n        });\n      })\n      .catch((err) => {\n        console.log(err, \"Error in loading data\");\n      });\n  };\n\n  render() {\n    const {\n      colleges_byState,\n      collegesDetails,\n      similarColleges,\n      students,\n      studentDetails,\n    } = this.state;\n    const { classes } = this.props;\n    const data = {\n      series: this.state.series,\n      options: {\n        labels: this.state.labels,\n        title: {\n          text: \"Chart by State\",\n          align: \"left\",\n\n          style: {\n            fontSize: \"20px\",\n            fontWeight: \"bold\",\n            color: \"#263238\",\n          },\n        },\n\n        responsive: [\n          {\n            breakpoint: 1400,\n            options: {\n              chart: {\n                width: 450,\n              },\n              legend: {\n                position: \"bottom\",\n              },\n            },\n          },\n          {\n            breakpoint: 863,\n            options: {\n              chart: {\n                width: 450,\n              },\n              legend: {\n                position: \"bottom\",\n              },\n            },\n          },\n          {\n            breakpoint: 550,\n            options: {\n              chart: {\n                width: 400,\n              },\n              legend: {\n                position: \"bottom\",\n              },\n            },\n          },\n          {\n            breakpoint: 450,\n            options: {\n              chart: {\n                width: 300,\n              },\n              legend: {\n                position: \"bottom\",\n              },\n            },\n          },\n        ],\n\n        chart: {\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              this.getCollegesByState(\n                config.w.config.labels[config.dataPointIndex]\n              );\n            },\n          },\n        },\n      },\n    };\n\n    return (\n      <div className={classes.list}>\n        <Grid container spacing={6}>\n          <Grid item xs={12} sm={12} md={6}>\n            {this.state.labels && this.state.series && (\n              <div className=\"donut\">\n                <Chart\n                  options={data[\"options\"]}\n                  series={data[\"series\"]}\n                  type=\"donut\"\n                  width=\"600\"\n                />\n              </div>\n            )}\n          </Grid>\n          <Grid item xs={12} sm={12} md={6}>\n            {colleges_byState && (\n              <div\n                style={{\n                  backgroundColor: \"#f2f3f4\",\n                  borderRadius: \"10px\",\n                  padding: \"20px\",\n                }}\n              >\n                <h1\n                  style={{\n                    textAlign: \"center\",\n                    textDecoration: \"underline\",\n                  }}\n                >\n                  List of Colleges\n                </h1>\n                {colleges_byState.map((college, index) => (\n                  <List>\n                    <ListItem\n                      button\n                      onClick={() =>\n                        this.collegeDetails(\n                          college.Id,\n                          college.State,\n                          college.Courses,\n                          college.Number_of_students\n                        )\n                      }\n                    >\n                      <ListItemAvatar>\n                        <Avatar>\n                          <SchoolIcon />\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary={college.Name} />\n                    </ListItem>\n                  </List>\n                ))}\n              </div>\n            )}\n          </Grid>\n        </Grid>\n        <Grid container spacing={6}>\n          <Grid item xs={12} sm={12} md={6}>\n            {collegesDetails && (\n              <div\n                style={{\n                  backgroundColor: \"#f2f3f4\",\n                  borderRadius: \"10px\",\n                  padding: \"20px\",\n                  width: \"100%\",\n                }}\n              >\n                <div style={{ textAlign: \"center\" }}>\n                  <h1 style={{ textDecoration: \"underline\" }}>\n                    College Details\n                  </h1>\n                  <h3>COLLEGE ID:- {collegesDetails.Id}</h3>\n                  <h3>COLLEGE NAME:- {collegesDetails.Name}</h3>\n                  <h3>YEAR FOUNDED:- {collegesDetails.Year_founded}</h3>\n                  <h3>CITY:- {collegesDetails.City}</h3>\n                  <h3>STATE:- {collegesDetails.State}</h3>\n                  <h3>COUNTRY:- {collegesDetails.Country}</h3>\n                  <h3>\n                    NUMBER OF STUDENTS:- {collegesDetails.Number_of_students}\n                  </h3>\n                  <h3>COURSES:- {collegesDetails.Courses.join(\", \")}</h3>\n                </div>\n              </div>\n            )}\n          </Grid>\n\n          <Grid item xs={12} sm={12} md={6}>\n            {similarColleges && (\n              <div\n                style={{\n                  backgroundColor: \"#f2f3f4\",\n                  borderRadius: \"10px\",\n                  padding: \"20px\",\n                }}\n              >\n                <h1\n                  style={{ textAlign: \"center\", textDecoration: \"underline\" }}\n                >\n                  Similar Colleges\n                </h1>\n                {similarColleges.length > 1 ? (\n                  <div>\n                    {similarColleges.map((college, index) => (\n                      <List>\n                        {college.Id !== this.state.collegeId && (\n                          <ListItem>\n                            <ListItemAvatar>\n                              <Avatar>\n                                <SchoolIcon />\n                              </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={college.Name} />\n                          </ListItem>\n                        )}\n                      </List>\n                    ))}\n                  </div>\n                ) : (\n                  <h3 style={{ textAlign: \"center\" }}>No similar colleges</h3>\n                )}\n              </div>\n            )}\n          </Grid>\n        </Grid>\n        <Grid container spacing={6}>\n          <Grid item xs={12} sm={12} md={6}>\n            {students && (\n              <div\n                style={{\n                  backgroundColor: \"#f2f3f4\",\n                  borderRadius: \"10px\",\n                  padding: \"20px\",\n                }}\n              >\n                <h1\n                  style={{ textAlign: \"center\", textDecoration: \"underline\" }}\n                >\n                  List of Students\n                </h1>\n                {students.length > 0 ? (\n                  <div>\n                    {students.map((student, index) => (\n                      <List>\n                        <ListItem\n                          button\n                          onClick={() => {\n                            this.getStudentDetails(student.Id);\n                          }}\n                        >\n                          <ListItemAvatar>\n                            <Avatar>\n                              <EmojiPeopleIcon />\n                            </Avatar>\n                          </ListItemAvatar>\n                          <ListItemText primary={student.Name} />\n                        </ListItem>\n                      </List>\n                    ))}\n                  </div>\n                ) : (\n                  <h3 style={{ textAlign: \"center\" }}>No student found</h3>\n                )}\n              </div>\n            )}\n          </Grid>\n\n          <Grid item xs={12} sm={12} md={6}>\n            {studentDetails && (\n              <div\n                style={{\n                  backgroundColor: \"#f2f3f4\",\n                  borderRadius: \"10px\",\n                  padding: \"20px\",\n                }}\n              >\n                <div style={{ textAlign: \"center\" }}>\n                  <h1 style={{ textDecoration: \"underline\" }}>\n                    Student Details\n                  </h1>\n                  <h3>STUDENT ID:- {studentDetails.Id}</h3>\n                  <h3>NAME:- {studentDetails.Name}</h3>\n                  <h3>YEAR OF BATCH:- {studentDetails.Year_of_batch}</h3>\n                  <h3>COLLEGE ID:- {studentDetails.College_id}</h3>\n                  <h3>SKILLS:- {studentDetails.Skills.join(\", \")}</h3>\n                </div>\n              </div>\n            )}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(ChartsByState);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount = async () => {\n    await axios\n      .get(\"http://localhost:3001/countCollege_byCourses\")\n      .then((res) => {\n        this.setState({\n          labels: res.data[\"courses\"],\n          series: res.data[\"count\"],\n        });\n      })\n      .catch((err) => {\n        console.log(err, \"Error in loading data\");\n      });\n  };\n\n  render() {\n    const { colleges_byState } = this.state;\n    const data = {\n      series: this.state.series,\n      options: {\n        labels: this.state.labels,\n        title: {\n          text: \"Chart by Courses\",\n          align: \"left\",\n\n          style: {\n            fontSize: \"20px\",\n            fontWeight: \"bold\",\n            color: \"#263238\",\n          },\n        },\n\n        responsive: [\n          {\n            breakpoint: 863,\n            options: {\n              chart: {\n                width: 500,\n              },\n              legend: {\n                position: \"bottom\",\n              },\n            },\n          },\n          {\n            breakpoint: 450,\n            options: {\n              chart: {\n                width: 400,\n              },\n              legend: {\n                position: \"bottom\",\n              },\n            },\n          },\n        ],\n      },\n    };\n\n    return (\n      <div>\n        {this.state.labels && this.state.series && (\n          <div className=\"donut\">\n            <Chart\n              options={data[\"options\"]}\n              series={data[\"series\"]}\n              type=\"donut\"\n              width=\"600\"\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ChartsByState from \"./Components/chartsByState\";\nimport ChartsByCourses from \"./Components/chartsByCourses\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    backgroundColor: \"#2F4F4F\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flag: 1,\n      open: false,\n    };\n  }\n  handleClick1 = () => {\n    this.setState({ flag: 1 });\n  };\n  handleClick2 = () => {\n    this.setState({ flag: 2 });\n  };\n  handleDrawerToggle = () => {\n    this.setState({ open: !this.state.open });\n  };\n  render() {\n    const { classes, window } = this.props;\n    const drawer = (\n      <div>\n        <div className={classes.toolbar} />\n        <List>\n          <ListItem button onClick={this.handleClick1}>\n            <ListItemIcon>\n              <DonutLargeIcon />\n            </ListItemIcon>\n            <ListItemText>Charts by State</ListItemText>\n          </ListItem>\n          <ListItem button onClick={this.handleClick2}>\n            <ListItemIcon>\n              <DonutLargeIcon />\n            </ListItemIcon>\n            <ListItemText>Charts by Courses</ListItemText>\n          </ListItem>\n        </List>\n      </div>\n    );\n    const container =\n      window !== undefined ? () => window().document.body : undefined;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={this.handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              Dashboard\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <nav className={classes.drawer}>\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={container}\n              variant=\"temporary\"\n              open={this.state.open}\n              onClose={this.handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              ModalProps={{\n                keepMounted: true,\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n\n          {this.state.flag == 1 ? <ChartsByState /> : <ChartsByCourses />}\n        </main>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}